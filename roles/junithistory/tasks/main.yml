---
# This playbook will install junit-history

############
# database #
############

- name: Start Mysql Service
  service: >
    name=mysql
    state=started
    enabled=yes
  become: yes

- name: Remove existing database user
  mysql_user: >
    name={{ junit_history_database_user }}
    state=absent
  become: yes

- name: Remove existing junit-history database
  mysql_db: >
    name={{ junit_history_database_name }}
    state=absent
  become: yes

- name: Create database user
  mysql_user: >
    name={{ junit_history_database_user }}
    password={{ junit_history_database_password }}
    priv=*.*:ALL host='%'
    state=present
  become: yes

- name: Create junit-history database
  mysql_db: >
    name={{ junit_history_database_name }}
    state=present
  become: yes

- name: Copy junit-history tables sql
  copy: >
    src={{ junit_history_sql }}
    dest=/home/{{ user_name }}
  become: yes

- name: Create junit-history default tables
  mysql_db: >
    name={{ junit_history_database_name }}
    target=/home/{{ user_name }}/{{ junit_history_sql }}
    state=import
  become: yes

- name: Restore junit-history backup tables
  mysql_db: >
    name={{ junit_history_database_name }}
    target={{ junit_history_backup_sql_path }}
    state=import
  when: restore_nas
  become: yes


#################
# junit-history #
#################

- name: Stop tomcat service
  service: >
    name=tomcat8
    state=stopped
  become: yes

- name: Remove existing junit-history war from tomcat
  file: >
    path={{ junit_history_war_path }}/*
    state=absent
  become: yes

- name: Remove existing junit-history xml from tomcat
  file: >
    path={{ junit_history_xml_path }}/*
    state=absent
  become: yes

- name: Remove existing junit-history directory
  file: >
    path={{ junit_history_path }}
    state=absent
  become: yes

- name: Create junit-history src directory
  file: >
    path={{ junit_history_src_path }}
    state=directory
  become: yes

- name: Clone junit-history repository
  git: >
    repo={{ junit_history_url }}
    dest={{ junit_history_src_path }}
  become: yes

- name: Get GWT uploader library
  get_url: >
    url={{ gwt_uploader_library_url }}
    dest={{ junit_history_src_path }}
  become: yes

- name: Create maven artifact
  command: >
    {{ maven_artifact_command }}
    chdir={{ junit_history_src_path }}
  become: yes

- name: Create junit-history archive
  command: >
    {{ maven_packaging_command }}
    chdir={{ junit_history_src_path }}
  become: yes

- name: Extract junit-history generated archive
  unarchive: >
    src={{ junit_history_src_path }}/target/{{ junit_history_tar_name }}
    dest={{ junit_history_src_path }}/target/
    copy=no
  become: yes

- name: Copy junit-history war into tomcat
  command: >
    cp {{ junit_history_war_name }} {{ junit_history_war_path }}/
    chdir={{ junit_history_src_path }}/target
  become: yes

- name: Copy junit-history xml into tomcat
  command: >
    cp {{ junit_history_xml_name }} {{ junit_history_xml_path }}/
    chdir={{ junit_history_src_path }}/target
  become: yes

- name: Set junit-history database url
  replace: >
    dest={{ junit_history_xml_path }}/{{ junit_history_xml_name }}
    regexp='name="bddUrl" value="jdbc:mysql://xx.xx.xx.xx/JUnitHistoryTools"'
    replace='name="bddUrl" value="jdbc:mysql://{{ junit_history_database_ip }}/JUnitHistoryTools"'
  become: yes

- name: Set junit-history database user
  replace: >
    dest={{ junit_history_xml_path }}/{{ junit_history_xml_name }}
    regexp='name="bddUser" value="xxxx"'
    replace='name="bddUser" value="{{ junit_history_database_user }}"'
  become: yes

- name: Set junit-history database password
  replace: >
    dest={{ junit_history_xml_path }}/{{ junit_history_xml_name }}
    regexp='name="bddPwd" value="xxxx"'
    replace='name="bddPwd" value="{{ junit_history_database_password }}"'
  become: yes

- name: Set junit-history admin password
  replace: >
    dest={{ junit_history_xml_path }}/{{ junit_history_xml_name }}
    regexp='name="pwd_admin" value="xxxx"'
    replace='name="pwd_admin" value="{{ junit_history_admin_password }}"'
  become: yes

- name: Set junit-history manager password
  replace: >
    dest={{ junit_history_xml_path }}/{{ junit_history_xml_name }}
    regexp='name="pwd_manager" value="xxxx"'
    replace='name="pwd_manager" value="{{ junit_history_manager_password }}"'
  become: yes

- name: Create gwtjunithistory directory
  file: >
    path={{ gwtjunithistory_dir_path }}/prod
    state=directory
  become: yes

- name: Restore gwtjunithistory folder
  command: >
    cp -R /mnt/nas/banc_iptvkit/{{ gwtjunithistory_dir_path }}/prod {{ gwtjunithistory_dir_path }}
  when: restore_nas
  become: yes

- name: Set gwtjunithistory folder permissions
  file: >
    path={{ gwtjunithistory_dir_path }}
    owner=tomcat8
    group=tomcat8
    recurse=yes
    state=directory
  become: yes

- name: Remove tomcat junit-history history directory
  file: >
    path={{ junit_history_history_path }}
    state=absent
  become: yes

- name: Start tomcat service
  service: >
    name=tomcat8
    state=started
  become: yes
